#!/usr/bin/env python

import scapy.all as scapy
import argparse

def get_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--ip", dest="ip_input", help="IP or IP range to scan")
    options = parser.parse_args()
    if not options.ip_input:
        parser.error("Please specify an interface; use --help for more info")
    return options


def scan(ip):
    arp_request = scapy.ARP(pdst=ip) #we created an ARP packet object
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast/arp_request
    # srp = send & receive the packet
    #[0] gives us the first element from the answered list;
    #this line returns two lists answered lists and unanswered lists
    #but we don't want to keep a variable unused so hence [0]
    answered_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]
    client_list = []
    for element in answered_list:
        client_dict = {"ip": element[1].psrc, "mac": element[1].hwsrc}
        client_list.append(client_dict)
    return client_list


def print_result(results_list):
    print("IP\t\t\tMAC ADDRESS")
    print("-----------------------------------------------------")
    for items in results_list:
        print(items["ip"] + "\t\t" + items["mac"])


user_input = get_arguments()
scan_result = scan(user_input.ip_input)
print_result(scan_result)
